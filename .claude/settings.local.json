{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(docker:*)",
      "Bash(powershell:*)",
      "Bash(scoop:*)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(supabase:*)",
      "Bash(unzip:*)",
      "Bash(node:*)",
      "Bash(dir test-function.ts)",
      "Bash(npm run build:*)",
      "Bash(cp:*)",
      "Bash(start chrome \"file:///C:/Users/User/Documents/GitHub/chat-pd-poa-06/test-edge-functions.html\")",
      "Bash(explorer test-edge-functions.html)",
      "Bash(npx supabase login:*)",
      "Bash(npx supabase functions deploy:*)",
      "Bash(copy deployquery-analyzer.ts supabasefunctionsquery-analyzerindex.ts)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npx supabase:*)",
      "Bash(copy supabasefunctionsqa-validatorindex_optimized.ts supabasefunctionsqa-validatorindex.ts)",
      "Bash(npm run type-check:*)",
      "Bash(taskkill:*)",
      "Bash(rm:*)",
      "Bash(copy:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(npm ls:*)",
      "Bash(psql:*)",
      "Bash(dir:*)",
      "Bash(find:*)",
      "Bash(diff:*)",
      "Bash(npx:*)",
      "Bash(cat:*)",
      "Bash(npm run validate-keys:*)",
      "Bash(grep:*)",
      "Bash(explorer test-add-case-browser.html:*)",
      "Bash(start chrome \"file:///C:/Users/User/Documents/GitHub/chat-pd-poa-06/test-add-case-browser.html\")",
      "Bash(start chrome \"file:///C:/Users/User/Documents/GitHub/chat-pd-poa-06/test-add-case-browser-v2.html\")",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(chmod:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "WebFetch(domain:*)",
      "Bash(gh issue view:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(timeout:*)",
      "Bash(echo \"Iniciando teste completo dos 121 casos...\" node scripts/test-qa-simple.mjs)",
      "Bash(start chrome \"file:///%CD%/test-chat-browser.html\")",
      "Bash(npm run deploy-functions:*)",
      "Bash(bash scripts/deploy-single-function.sh:*)",
      "Bash(start chrome \"file:///C:/Users/Aurora/OneDrive - PUCRS - BR/Documentos/GitHub/chat-pd-poa-07/test-chat-browser-v2.html\")",
      "Bash(set SUPABASE_ACCESS_TOKEN=sbp_b64d8863b5c2a1ec88484e5f210f8cd654c8dcb3)",
      "Bash(del:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node test-agentic-rag-v3.mjs)",
      "Bash(start chrome \"http://localhost:5173/chat\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function searchPDUS() {\n  // Buscar por ''artigo 1'' no PDUS\n  const { data, error } = await supabase\n    .from(''legal_articles'')\n    .select(''*'')\n    .or(''content.ilike.%artigo 1%,title.ilike.%artigo 1%'')\n    .ilike(''source'', ''%PDUS%'')\n    .limit(5);\n  \n  console.log(''PDUS Articles found:'', data?.length || 0);\n  if (data && data.length > 0) {\n    data.forEach(d => {\n      console.log(''- Article:'', d.article_number, ''Source:'', d.source);\n      console.log(''  Title:'', d.title);\n      console.log(''  Content preview:'', d.content?.substring(0, 100));\n    });\n  } else {\n    console.log(''No PDUS articles found'');\n  }\n}\n\nsearchPDUS();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkSources() {\n  // Ver quais sources temos\n  const { data, error } = await supabase\n    .from(''legal_articles'')\n    .select(''source'')\n    .limit(100);\n  \n  const sources = [...new Set(data?.map(d => d.source) || [])];\n  console.log(''Available sources:'', sources);\n  \n  // Contar por source\n  for (const source of sources) {\n    const { count } = await supabase\n      .from(''legal_articles'')\n      .select(''*'', { count: ''exact'', head: true })\n      .eq(''source'', source);\n    console.log(''- '' + source + '':'', count, ''articles'');\n  }\n}\n\ncheckSources();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkTables() {\n  // Verificar legal_articles\n  const { count: legalCount } = await supabase\n    .from(''legal_articles'')\n    .select(''*'', { count: ''exact'', head: true });\n  console.log(''legal_articles count:'', legalCount);\n\n  // Verificar document_sections  \n  const { count: sectionsCount } = await supabase\n    .from(''document_sections'')\n    .select(''*'', { count: ''exact'', head: true });\n  console.log(''document_sections count:'', sectionsCount);\n\n  // Buscar PDUS em document_sections\n  const { data: pdusData } = await supabase\n    .from(''document_sections'')\n    .select(''title, content'')\n    .or(''title.ilike.%PDUS%,content.ilike.%PDUS%'')\n    .limit(3);\n  \n  console.log(''\\nPDUS in document_sections:'', pdusData?.length || 0);\n  pdusData?.forEach(d => {\n    console.log(''- Title:'', d.title);\n    console.log(''  Preview:'', d.content?.substring(0, 100));\n  });\n}\n\ncheckTables();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkColumns() {\n  const { data, error } = await supabase\n    .from(''legal_articles'')\n    .select(''*'')\n    .limit(1);\n  \n  if (error) {\n    console.log(''Error:'', error.message);\n  } else if (data && data.length > 0) {\n    console.log(''Columns in legal_articles:'');\n    Object.keys(data[0]).forEach(col => console.log(''  -'', col));\n  }\n}\n\ncheckColumns();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkTableStructure() {\n  // Verificar se a tabela existe\n  const { data: tables, error: tableError } = await supabase\n    .from(''information_schema.tables'')\n    .select(''table_name'')\n    .eq(''table_schema'', ''public'')\n    .ilike(''table_name'', ''%regime%'');\n  \n  console.log(''Tables with regime:'', tables?.map(t => t.table_name) || ''none'');\n  \n  // Verificar colunas da tabela regime_urbanistico_consolidado\n  const { data, error } = await supabase\n    .from(''regime_urbanistico_consolidado'')\n    .select(''*'')\n    .limit(1);\n  \n  if (error) {\n    console.log(''Error accessing regime_urbanistico_consolidado:'', error.message);\n    \n    // Tentar outras tabelas\n    const { data: regime1 } = await supabase\n      .from(''regime_urbanistico'')\n      .select(''*'')\n      .limit(1);\n    \n    if (regime1 && regime1[0]) {\n      console.log(''\\nColumns in regime_urbanistico:'', Object.keys(regime1[0]));\n    }\n    \n    const { data: regime2 } = await supabase\n      .from(''regime_urbanistico_completo'')\n      .select(''*'')\n      .limit(1);\n      \n    if (regime2 && regime2[0]) {\n      console.log(''\\nColumns in regime_urbanistico_completo:'', Object.keys(regime2[0]));\n    }\n  } else if (data && data[0]) {\n    console.log(''\\nColumns in regime_urbanistico_consolidado:'', Object.keys(data[0]));\n  }\n}\n\ncheckTableStructure();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkColumns() {\n  // Verificar diretamente as colunas da tabela\n  const { data, error } = await supabase\n    .from(''regime_urbanistico_consolidado'')\n    .select(''*'')\n    .limit(1);\n  \n  if (error) {\n    console.log(''Error:'', error.message);\n    console.log(''Full error:'', error);\n  } else if (data && data.length > 0) {\n    console.log(''Columns found in regime_urbanistico_consolidado:'');\n    Object.keys(data[0]).forEach(col => console.log(''  -'', col));\n    console.log(''\\nSample data:'');\n    console.log(''First row:'', data[0]);\n  } else {\n    console.log(''Table exists but is empty'');\n  }\n}\n\ncheckColumns();\n\")",
      "Bash(set NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co)",
      "Bash(set:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node scripts/monitoring/setup-monitoring.mjs --skip-tables --test-only)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node test-e2e-agentic-rag-v3-complete.mjs)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node test-performance-agentic-rag-v3.mjs)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node test-qa-agentic-rag-v3.mjs --limit 10)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(process.env.NEXT_PUBLIC_SUPABASE_URL,process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);(async()=>{const{count}=await s.from(''regime_urbanistico_consolidado'').select(''*'',{count:''exact'',head:true});console.log(''Total records:'',count);const{data:zones}=await s.from(''regime_urbanistico_consolidado'').select(''\"\"Zona\"\"'').limit(10);console.log(''\\nSample zones:'');zones?.forEach(z=>console.log('' -'',z.Zona));const{data:bairros}=await s.from(''regime_urbanistico_consolidado'').select(''\"\"Bairro\"\"'').limit(10);console.log(''\\nSample bairros:'');bairros?.forEach(b=>console.log('' -'',b.Bairro));})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node scripts/import-regime-from-csv-complete.mjs)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(process.env.NEXT_PUBLIC_SUPABASE_URL,process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);(async()=>{const{data,error}=await s.from(''regime_urbanistico_consolidado'').select(''*'').limit(3);if(error){console.log(''Error:'',error.message);return;}console.log(''Sample records:'',data?.length||0);if(data&&data[0]){console.log(''\\nColumns available:'');Object.keys(data[0]).forEach(k=>console.log(''-'',k));console.log(''\\nFirst record:'');console.log(''Bairro:'',data[0].Bairro||data[0].bairro);console.log(''Zona:'',data[0].Zona||data[0].zona);console.log(''Altura:'',data[0].altura_maxima||data[0][''Altura_Maxima___Edificacao_Isolada'']);}})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(''https://ngrqwmvuhvjkeohesbxs.supabase.co'',process.env.SUPABASE_SERVICE_ROLE_KEY);(async()=>{const{count,error}=await s.from(''regime_urbanistico_consolidado'').select(''*'',{count:''exact'',head:true});console.log(''Total records with service role:'',count);if(error)console.log(''Error:'',error.message);})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(''https://ngrqwmvuhvjkeohesbxs.supabase.co'',process.env.SUPABASE_SERVICE_ROLE_KEY);(async()=>{const{data}=await s.from(''regime_urbanistico_consolidado'').select(''zona,bairro'').limit(20);console.log(''Sample data with service role:'');data?.forEach(r=>console.log(''-'',r.zona,''|'',r.bairro));console.log(''\\nSearching for ZOT 02:'');const{data:z2}=await s.from(''regime_urbanistico_consolidado'').select(''*'').or(''zona.ilike.%02%,zona.ilike.%2%'').limit(5);z2?.forEach(r=>console.log(''-'',r.zona,''|'',r.bairro,''| Altura:'',r.altura_maxima));})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(''https://ngrqwmvuhvjkeohesbxs.supabase.co'',process.env.SUPABASE_SERVICE_ROLE_KEY);(async()=>{const{data,error}=await s.from(''regime_urbanistico_consolidado'').select(''*'').limit(1);if(error){console.log(''Error:'',error);return;}if(data&&data[0]){console.log(''Column names:'');Object.keys(data[0]).forEach(k=>console.log(''-'',k));console.log(''\\nSample record:'');console.log(data[0]);}})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(''https://ngrqwmvuhvjkeohesbxs.supabase.co'',process.env.SUPABASE_SERVICE_ROLE_KEY);(async()=>{const{data:zones}=await s.from(''regime_urbanistico_consolidado'').select(''\"\"Zona\"\"'');const unique=[...new Set(zones?.map(r=>r.Zona))].sort();console.log(''All unique zones in database:'');unique.forEach(z=>console.log(''-'',z));console.log(''\\nTotal unique zones:'',unique.length);const{data:bairros}=await s.from(''regime_urbanistico_consolidado'').select(''\"\"Bairro\"\"'');const uniqueBairros=[...new Set(bairros?.map(r=>r.Bairro))].sort();console.log(''\\nSample neighborhoods (first 20):'');uniqueBairros.slice(0,20).forEach(b=>console.log(''-'',b));})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(''https://ngrqwmvuhvjkeohesbxs.supabase.co'',process.env.SUPABASE_SERVICE_ROLE_KEY);(async()=>{const{data:pet}=await s.from(''regime_urbanistico_consolidado'').select(''*'').ilike(''\"\"Bairro\"\"'',''%PETRO%'').limit(5);console.log(''Searching for Petrópolis variants:'');if(pet?.length){pet.forEach(r=>console.log(''-'',r.Bairro,''|'',r.Zona,''| Altura:'',r.Altura_Maxima___Edificacao_Isolada));}else{console.log(''Not found with PETRO'');}const{data:all}=await s.from(''regime_urbanistico_consolidado'').select(''\"\"Bairro\"\"'');const allBairros=[...new Set(all?.map(r=>r.Bairro))];console.log(''\\nAll neighborhoods with P:'');allBairros.filter(b=>b&&b.startsWith(''P'')).forEach(b=>console.log(''-'',b));})()\")",
      "Bash(SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"const{createClient}=require(''@supabase/supabase-js'');const s=createClient(''https://ngrqwmvuhvjkeohesbxs.supabase.co'',process.env.SUPABASE_SERVICE_ROLE_KEY);(async()=>{console.log(''ZOT 02 DATA:'');const{data:z2}=await s.from(''regime_urbanistico_consolidado'').select(''*'').eq(''Zona'',''ZOT 02'').limit(5);z2?.forEach(r=>console.log(''- Bairro:'',r.Bairro,''| Altura:'',r.Altura_Maxima___Edificacao_Isolada,''m | CA:'',r.Coeficiente_de_Aproveitamento___Basico));console.log(''\\nPETRÓPOLIS DATA:'');const{data:pet}=await s.from(''regime_urbanistico_consolidado'').select(''*'').eq(''Bairro'',''PETRÓPOLIS'').limit(5);pet?.forEach(r=>console.log(''- Zona:'',r.Zona,''| Altura:'',r.Altura_Maxima___Edificacao_Isolada,''m | CA:'',r.Coeficiente_de_Aproveitamento___Basico));})()\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYwOTAxNywiZXhwIjoyMDY5MTg1MDE3fQ.7jVZP70RAjpfFPfehZt5Gr3vSxn8DZ3YyPJNjCwZXEo node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY);\n\nasync function checkSchema() {\n  // Check legal_articles columns\n  const { data: legal, error: legalErr } = await supabase\n    .from(''legal_articles'')\n    .select(''*'')\n    .limit(1);\n  \n  if (legal && legal[0]) {\n    console.log(''legal_articles columns:'');\n    Object.keys(legal[0]).forEach(col => console.log(''  -'', col));\n  } else if (legalErr) {\n    console.log(''legal_articles error:'', legalErr.message);\n  }\n  \n  // Check qa_test_cases columns\n  const { data: qa, error: qaErr } = await supabase\n    .from(''qa_test_cases'')\n    .select(''*'')\n    .limit(1);\n  \n  if (qa && qa[0]) {\n    console.log(''\\nqa_test_cases columns:'');\n    Object.keys(qa[0]).forEach(col => console.log(''  -'', col));\n  } else if (qaErr) {\n    console.log(''qa_test_cases error:'', qaErr.message);\n  }\n  \n  // Check document_sections columns\n  const { data: doc, error: docErr } = await supabase\n    .from(''document_sections'')\n    .select(''*'')\n    .limit(1);\n  \n  if (doc && doc[0]) {\n    console.log(''\\ndocument_sections columns:'');\n    Object.keys(doc[0]).forEach(col => console.log(''  -'', col));\n  } else if (docErr) {\n    console.log(''document_sections error:'', docErr.message);\n  } else {\n    console.log(''\\ndocument_sections: empty table'');\n  }\n}\n\ncheckSchema();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function testNewData() {\n  console.log(''🔍 Testing new imported data...\\n'');\n  \n  // Test 1: Check REGIME_FALLBACK articles\n  const { data: regime, count: regimeCount } = await supabase\n    .from(''legal_articles'')\n    .select(''*'', { count: ''exact'', head: true })\n    .eq(''document_type'', ''REGIME_FALLBACK'');\n  \n  console.log(''✅ Regime Fallback articles:'', regimeCount || 0);\n  \n  // Test 2: Search for Petrópolis in keywords\n  const { data: petropolis } = await supabase\n    .from(''legal_articles'')\n    .select(''article_number, keywords'')\n    .eq(''document_type'', ''REGIME_FALLBACK'')\n    .contains(''keywords'', [''BAIRRO_PETRÓPOLIS''])\n    .limit(3);\n  \n  console.log(''✅ Petrópolis fallback data:'', petropolis?.length || 0, ''records'');\n  \n  // Test 3: Check new QA test cases\n  const { data: qaNew } = await supabase\n    .from(''qa_test_cases'')\n    .select(''id, test_id, category'')\n    .gt(''id'', 1000)\n    .limit(5);\n  \n  console.log(''✅ New QA test cases:'', qaNew?.length || 0);\n  if (qaNew && qaNew.length > 0) {\n    qaNew.forEach(q => console.log(''  - ID:'', q.id, ''Category:'', q.category));\n  }\n  \n  // Test 4: Check PDUS articles\n  const { count: pdusCount } = await supabase\n    .from(''legal_articles'')\n    .select(''*'', { count: ''exact'', head: true })\n    .eq(''document_type'', ''PDUS'')\n    .gt(''article_number'', 200);\n  \n  console.log(''✅ PDUS articles > 200:'', pdusCount || 0);\n  \n  console.log(''\\n🎯 Data successfully imported and accessible!'');\n}\n\ntestNewData();\n\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:\\Users\\Aurora\\OneDrive - PUCRS - BR\\Documentos\\GitHub\\chat-pd-poa-clean"
    ]
  }
}