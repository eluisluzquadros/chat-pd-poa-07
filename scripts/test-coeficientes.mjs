import fetch from 'node-fetch';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Load environment variables
dotenv.config({ path: join(__dirname, '.env.local') });

const SUPABASE_URL = process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

console.log('üß™ Testando Query de Coeficientes da ZOT 04\n');
console.log('URL:', SUPABASE_URL);
console.log('Query: "Quais os coeficientes de aproveitamento da ZOT 04?"\n');

async function testCoeficientes() {
  try {
    const response = await fetch(`${SUPABASE_URL}/functions/v1/agentic-rag`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
      },
      body: JSON.stringify({
        message: 'Quais os coeficientes de aproveitamento da ZOT 04?',
        bypassCache: true,
        model: 'openai/gpt-3.5-turbo'
      }),
    });
    
    const result = await response.json();
    
    if (!response.ok) {
      console.error('‚ùå Erro na requisi√ß√£o:', result);
      return;
    }
    
    console.log('‚úÖ Resposta recebida:\n');
    console.log(result.response);
    
    // Verificar se cont√©m os valores num√©ricos esperados
    const hasBasico2 = result.response && (result.response.includes('2.0') || result.response.includes('2,0') || result.response.includes(': 2'));
    const hasMaximo4 = result.response && (result.response.includes('4.0') || result.response.includes('4,0') || result.response.includes(': 4'));
    const hasNaoDisponivel = result.response && result.response.includes('N√£o dispon√≠vel');
    
    console.log('\nüìä Verifica√ß√£o de valores:');
    console.log(`  ${hasBasico2 ? '‚úÖ' : '‚ùå'} CA b√°sico = 2.0`);
    console.log(`  ${hasMaximo4 ? '‚úÖ' : '‚ùå'} CA m√°ximo = 4.0`);
    console.log(`  ${!hasNaoDisponivel ? '‚úÖ' : '‚ö†Ô∏è'} ${hasNaoDisponivel ? 'Cont√©m "N√£o dispon√≠vel" (deveria mostrar valores num√©ricos)' : 'N√£o cont√©m "N√£o dispon√≠vel" (correto)'}`);
    
    if (hasBasico2 && hasMaximo4 && !hasNaoDisponivel) {
      console.log('\n‚úÖ TESTE PASSOU: Resposta cont√©m valores num√©ricos corretos');
    } else if (hasBasico2 && hasMaximo4) {
      console.log('\n‚ö†Ô∏è TESTE PARCIAL: Valores corretos mas ainda mostra "N√£o dispon√≠vel"');
    } else {
      console.log('\n‚ùå TESTE FALHOU: Resposta n√£o cont√©m os valores corretos');
    }
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  }
}

testCoeficientes();