import fetch from 'node-fetch';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Load environment variables
dotenv.config({ path: join(__dirname, '..', '.env.local') });

const SUPABASE_URL = process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

async function testFormattedResponse() {
  console.log('üß™ TESTE DE FORMATA√á√ÉO DAS RESPOSTAS\n');
  console.log('=' .repeat(70));
  
  const testQueries = [
    "Qual √© a altura m√°xima permitida no bairro Petr√≥polis?",
    "Quais s√£o os principais √≠ndices urban√≠sticos do bairro Centro Hist√≥rico?",
    "Qual a altura m√°xima no bairro Moinhos de Vento?"
  ];
  
  for (const query of testQueries) {
    console.log(`\nüìù Testando: "${query}"`);
    console.log('-'.repeat(50));
    
    try {
      const response = await fetch(`${SUPABASE_URL}/functions/v1/agentic-rag`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
        },
        body: JSON.stringify({
          query: query,
          bypassCache: true,
          model: 'openai/gpt-3.5-turbo'
        }),
      });
      
      const result = await response.json();
      
      if (response.ok && result.response) {
        console.log('‚úÖ Resposta recebida\n');
        console.log(result.response);
        
        // Verificar formata√ß√£o
        console.log('\nüîç Verifica√ß√µes:');
        
        // 1. Tem os 3 indicadores?
        const hasAltura = result.response.includes('Altura m√°xima:') || result.response.includes('altura m√°xima');
        const hasCABasico = result.response.includes('CA b√°sico') || result.response.includes('Coeficiente de aproveitamento m√≠nimo');
        const hasCAMaximo = result.response.includes('CA m√°ximo') || result.response.includes('Coeficiente de aproveitamento m√°ximo');
        
        console.log(`   ‚úì Altura m√°xima: ${hasAltura ? '‚úÖ' : '‚ùå'}`);
        console.log(`   ‚úì CA b√°sico: ${hasCABasico ? '‚úÖ' : '‚ùå'}`);
        console.log(`   ‚úì CA m√°ximo: ${hasCAMaximo ? '‚úÖ' : '‚ùå'}`);
        
        // 2. Tem o template obrigat√≥rio?
        const hasTemplate = result.response.includes('üìç **Explore mais:**') && 
                          result.response.includes('https://bit.ly/3ILdXRA') &&
                          result.response.includes('https://bit.ly/4o7AWqb') &&
                          result.response.includes('https://bit.ly/4oefZKm') &&
                          result.response.includes('planodiretor@portoalegre.rs.gov.br');
        
        console.log(`   ‚úì Template obrigat√≥rio: ${hasTemplate ? '‚úÖ' : '‚ùå'}`);
        
        if (!hasAltura || !hasCABasico || !hasCAMaximo) {
          console.log('\n   ‚ö†Ô∏è AVISO: Faltam indicadores obrigat√≥rios!');
        }
        
        if (!hasTemplate) {
          console.log('\n   ‚ö†Ô∏è AVISO: Template obrigat√≥rio incompleto ou ausente!');
        }
        
      } else {
        console.log(`‚ùå Erro: ${result.error || 'Resposta inv√°lida'}`);
      }
    } catch (error) {
      console.log(`‚ùå Erro de rede: ${error.message}`);
    }
  }
  
  console.log('\n' + '=' .repeat(70));
  console.log('‚úÖ Teste completo!');
  
  console.log('\nüìã FORMATO ESPERADO:\n');
  console.log('Para o bairro [NOME], os indicadores urban√≠sticos s√£o:\n');
  console.log('**Zona [X]:**');
  console.log('1. **Altura m√°xima**: X metros');
  console.log('2. **Coeficiente de aproveitamento m√≠nimo (CA b√°sico)**: X.X');
  console.log('3. **Coeficiente de aproveitamento m√°ximo (CA m√°ximo)**: X.X\n');
  console.log('[Se houver m√∫ltiplas zonas, repetir para cada uma]\n');
  console.log('üìç **Explore mais:**');
  console.log('‚Ä¢ Mapa com Regras Construtivas: https://bit.ly/3ILdXRA ‚Üó');
  console.log('‚Ä¢ Contribua com sugest√µes: https://bit.ly/4o7AWqb ‚Üó');
  console.log('‚Ä¢ Participe da Audi√™ncia P√∫blica: https://bit.ly/4oefZKm ‚Üó\n');
  console.log('üí¨ **D√∫vidas?** planodiretor@portoalegre.rs.gov.br');
}

testFormattedResponse().catch(console.error);