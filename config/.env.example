# ==================================================
# CONFIGURAÇÃO DE API KEYS PARA SISTEMA RAG MULTI-LLM
# Sistema RAG Porto de Outono - Configuração Completa
# ==================================================

# ----------------------------------
# SUPABASE CONFIGURATION (OBRIGATÓRIO)
# ----------------------------------
# Supabase Project URL
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
# Supabase Anon Key (público, seguro para frontend)
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here
# Supabase Service Role Key (PRIVADO, apenas backend)
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here
# Supabase CLI Key (para migrations e admin)
NEXT_PUBLIC_SUPABASE_CLI_KEY=your-cli-key-here

# ----------------------------------
# OPENAI API KEYS
# ----------------------------------
# OpenAI API Key para GPT-4, GPT-4.5, embeddings
# Obtenha em: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here
# Organização OpenAI (opcional)
OPENAI_ORG_ID=org-your-organization-id

# ----------------------------------
# ANTHROPIC CLAUDE API KEYS
# ----------------------------------
# Anthropic API Key para Claude (Opus, Sonnet, Haiku)
# Obtenha em: https://console.anthropic.com/
CLAUDE_API_KEY=sk-ant-your-claude-api-key-here
ANTHROPIC_API_KEY=sk-ant-your-claude-api-key-here

# ----------------------------------
# GOOGLE GEMINI API KEYS
# ----------------------------------
# Google AI Studio API Key para Gemini
# Obtenha em: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here
GOOGLE_AI_API_KEY=your-gemini-api-key-here
# Google Cloud Project ID (para Vertex AI)
GOOGLE_CLOUD_PROJECT_ID=your-project-id
# Google Application Credentials (path para service account JSON)
GOOGLE_APPLICATION_CREDENTIALS=./config/google-service-account.json

# ----------------------------------
# GROQ API KEYS
# ----------------------------------
# Groq API Key para modelos ultra-rápidos (Mixtral, Llama)
# Obtenha em: https://console.groq.com/keys
GROQ_API_KEY=gsk_your-groq-api-key-here

# ----------------------------------
# DEEPSEEK API KEYS
# ----------------------------------
# DeepSeek API Key para modelos de código
# Obtenha em: https://platform.deepseek.com/api_keys
DEEPSEEK_API_KEY=sk-your-deepseek-api-key-here

# ----------------------------------
# META LLAMA / HUGGING FACE
# ----------------------------------
# Hugging Face API Token para Llama e outros modelos
# Obtenha em: https://huggingface.co/settings/tokens
HUGGINGFACE_API_TOKEN=hf_your-huggingface-token-here
# Replicate API Token (para Llama via Replicate)
REPLICATE_API_TOKEN=r8_your-replicate-token-here

# ----------------------------------
# OLLAMA (LOCAL LLAMA)
# ----------------------------------
# URL do servidor Ollama local (padrão: http://localhost:11434)
OLLAMA_BASE_URL=http://localhost:11434
# Modelos Ollama disponíveis (separados por vírgula)
OLLAMA_MODELS=llama3.1:8b,codellama:13b,mistral:7b

# ----------------------------------
# CONFIGURAÇÕES DE RATE LIMITING
# ----------------------------------
# Rate limits por minuto para cada provider
OPENAI_RATE_LIMIT=3500
CLAUDE_RATE_LIMIT=1000
GEMINI_RATE_LIMIT=1500
GROQ_RATE_LIMIT=30000
DEEPSEEK_RATE_LIMIT=1000
HUGGINGFACE_RATE_LIMIT=1000

# ----------------------------------
# CONFIGURAÇÕES DE CUSTO E TOKENS
# ----------------------------------
# Limites de custo diário em USD
MAX_DAILY_COST_USD=50.00
# Limite de tokens por request
MAX_TOKENS_PER_REQUEST=4000
# Modelo padrão para fallback
DEFAULT_LLM_PROVIDER=openai
DEFAULT_MODEL=gpt-4o-mini

# ----------------------------------
# CONFIGURAÇÕES DE CACHE E PERFORMANCE
# ----------------------------------
# Cache TTL em segundos
LLM_CACHE_TTL=3600
# Enable/disable caching
ENABLE_LLM_CACHE=true
# Redis URL para cache (opcional)
REDIS_URL=redis://localhost:6379

# ----------------------------------
# CONFIGURAÇÕES DE MONITORING
# ----------------------------------
# Enable detailed logging
ENABLE_LLM_METRICS=true
# Log level (debug, info, warn, error)
LOG_LEVEL=info
# Webhook URL para alertas (opcional)
ALERT_WEBHOOK_URL=https://your-webhook-url.com

# ----------------------------------
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# ----------------------------------
# Ambiente (development, staging, production)
NODE_ENV=development
# Enable debug mode
DEBUG_MODE=true
# Test mode (usa mock responses)
TEST_MODE=false

# ----------------------------------
# CONFIGURAÇÕES DE SEGURANÇA
# ----------------------------------
# Secret para JWT tokens
JWT_SECRET=your-super-secret-jwt-key-here
# API keys encryption key
API_KEYS_ENCRYPTION_KEY=your-encryption-key-32-chars-long
# CORS origins (separados por vírgula)
CORS_ORIGINS=http://localhost:3000,https://your-domain.com

# ----------------------------------
# CONFIGURAÇÕES ESPECÍFICAS POR MODELO
# ----------------------------------
# GPT-4 Turbo settings
GPT4_TURBO_MODEL=gpt-4-turbo-preview
GPT4_TURBO_MAX_TOKENS=4000
GPT4_TURBO_TEMPERATURE=0.7

# Claude 3 settings
CLAUDE_3_OPUS_MODEL=claude-3-opus-20240229
CLAUDE_3_SONNET_MODEL=claude-3-5-sonnet-20241022
CLAUDE_3_HAIKU_MODEL=claude-3-haiku-20240307

# Gemini settings
GEMINI_PRO_MODEL=gemini-1.5-pro
GEMINI_FLASH_MODEL=gemini-1.5-flash
GEMINI_VISION_MODEL=gemini-1.5-pro-vision

# Groq settings
GROQ_MIXTRAL_MODEL=mixtral-8x7b-32768
GROQ_LLAMA_MODEL=llama3.1-70b-versatile

# DeepSeek settings
DEEPSEEK_CODER_MODEL=deepseek-coder
DEEPSEEK_CHAT_MODEL=deepseek-chat

# ----------------------------------
# HEALTH CHECK ENDPOINTS
# ----------------------------------
# URLs para health check de cada provider
OPENAI_HEALTH_CHECK=https://api.openai.com/v1/models
CLAUDE_HEALTH_CHECK=https://api.anthropic.com/v1/messages
GEMINI_HEALTH_CHECK=https://generativelanguage.googleapis.com/v1beta/models
GROQ_HEALTH_CHECK=https://api.groq.com/openai/v1/models
DEEPSEEK_HEALTH_CHECK=https://api.deepseek.com/v1/models

# ----------------------------------
# BACKUP E FALLBACK
# ----------------------------------
# Provider de backup quando o principal falha
BACKUP_LLM_PROVIDER=claude
BACKUP_MODEL=claude-3-5-sonnet-20241022
# Enable automatic fallback
ENABLE_AUTO_FALLBACK=true

# ==================================================
# INSTRUÇÕES DE USO:
# 1. Copie este arquivo para .env.local
# 2. Preencha as API keys necessárias
# 3. Execute o script de validação: npm run validate-keys
# 4. Configure as variáveis no Supabase: npm run deploy-env
# ==================================================