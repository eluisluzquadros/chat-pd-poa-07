import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://ngrqwmvuhvjkeohesbxs.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg';

const supabase = createClient(supabaseUrl, supabaseKey);

// Queries problem√°ticas que ainda retornam Petr√≥polis
const problematicQueries = [
  "Como poder√° ser feito a flexibiliza√ßao de Recuo de jardim?",
  "qual a altura m√°xima permitida?"
];

console.log('üîç Debug de queries gen√©ricas sem contexto...\n');

for (const query of problematicQueries) {
  console.log(`\nüìù Query: "${query}"`);
  console.log('=' * 60);
  
  try {
    // Primeiro, analisar a query
    const { data: analysisData, error: analysisError } = await supabase.functions.invoke('query-analyzer', {
      body: { query }
    });

    if (analysisError) {
      console.error('‚ùå Erro na an√°lise:', analysisError);
      continue;
    }

    console.log('\nüìä An√°lise da query:');
    console.log(JSON.stringify(analysisData, null, 2));
    
    // Verificar especificamente o que est√° sendo detectado
    console.log('\nüîé Detalhes importantes:');
    console.log('- Intent:', analysisData.intent);
    console.log('- Strategy:', analysisData.strategy);
    console.log('- Bairros:', analysisData.entities?.bairros || []);
    console.log('- isConstructionQuery:', analysisData.isConstructionQuery);
    console.log('- requiredDatasets:', analysisData.requiredDatasets);
    
    // Se n√£o h√° bairros e √© construction query, isso pode ser o problema
    if (analysisData.isConstructionQuery && (!analysisData.entities?.bairros || analysisData.entities.bairros.length === 0)) {
      console.log('\n‚ö†Ô∏è  ALERTA: Query de constru√ß√£o sem bairro especificado!');
      console.log('Isso pode fazer o sistema usar dados de um bairro padr√£o.');
    }
    
  } catch (error) {
    console.error('‚ùå Erro durante o debug:', error);
  }
}

console.log('\n\nüèÅ Debug conclu√≠do!');